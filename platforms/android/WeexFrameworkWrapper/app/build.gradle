apply plugin: 'com.android.application'
apply plugin: 'eros-revan'

android {
    compileSdkVersion 25
    buildToolsVersion '26.0.2'
    flavorDimensions 'default'
    defaultConfig {
        applicationId APPLICATION_ID
        minSdkVersion 16
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"
        multiDexEnabled true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        javaCompileOptions.annotationProcessorOptions.includeCompileClasspath = true
        ndk {
            abiFilters "x86"
            abiFilters "armeabi"
        }
    }

    signingConfigs {
        sociaclCommer {
            keyAlias 'socialcommer'
            keyPassword 'socialcommer123'
            storeFile file('../SocialCommer.jks')
            storePassword 'socialcommer123'
            v2SigningEnabled false
        }
    }


    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.sociaclCommer
            manifestPlaceholders = [
                    GETUI_APP_ID    : GETUI_APPID,
                    GETUI_APP_KEY   : GETUI_APPKEY,
                    GETUI_APP_SECRET: GETTUI_APPSECRET,
                    APP_ID          : APPLICATION_ID
            ]
        }

        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.sociaclCommer
            manifestPlaceholders = [
                    GETUI_APP_ID    : GETUI_APPID,
                    GETUI_APP_KEY   : GETUI_APPKEY,
                    GETUI_APP_SECRET: GETTUI_APPSECRET,
                    APP_ID          : APPLICATION_ID
            ]
        }

    }

    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }

/*
    productFlavors {
        samplechannel{
            dimension 'default'
        }

        yingyongbao{
            dimension 'default'
        }
    }
    productFlavors.all {
        flavor -> flavor.manifestPlaceholders = [UMENG_CHANNEL_VALUE: name]
    }*/

    sourceSets {
        main {
            jniLibs.srcDirs = ['../wxframework/libs']
        }
    }
}

repositories {
    mavenCentral()
    flatDir {

        dirs '../wxframework/libs', 'libs'

    }
}


dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile "com.android.support:support-v4:${PROJECT_SUPPORTLIBVERSION}"
    //eros base
    compile 'com.github.bmfe:eros-nexus:0.0.3'
    compile 'com.github.bmfe:WeexErosFramework:0.0.4'
    //eros plugin
    compile 'com.github.bmfe:eros-plugin-android-amap:0.0.1'
    compile 'com.github.bmfe:eros-plugin-android-getui:0.0.1'
    compile 'com.github.bmfe:eros-plugin-android-wxpay:0.0.1'
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    compile 'com.google.android.gms:play-services-auth:15.0.1'
    compile('com.razorpay:checkout:1.4.7')
    testCompile 'junit:junit:4.12'
    compile project(':sharesdk')
}
